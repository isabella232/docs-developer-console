---
title: Using Pivotal Developer Console to Provision Services
owner: Marketplace
---

<strong><%= modified_date %></strong>

<%# is the purpose of this topic to provide info for Codys on how to use PDC? %>
This topic describes how to use <%= vars.product_full %> (<%= vars.product_abbr %>)
to provision services within a `Project` for use with apps deployed on multiple platforms.

## <a id='selecting-project'></a> Select a Project

Before provisioning or accessing details for any <%= vars.product_abbr %> service instances you must
select a `Project` that you have access to.
For more information about `Projects`, see [Overview](using-providing.html#overview).

<p class="note"><strong>Note</strong>:
  Instances and bindings that you create when using one <code>Project</code> are not visible when using another <code>Project</code>.
</p>

To select a `Project`:

1. Run:

    ```
    pdc project use
    ```

    <p class="terminal">
    $ pdc project use --name=PROJECT-NAME
    Using project 'PROJECT-NAME'.
    </p>

    Where `PROJECT-NAME` is the name of your `Project`.

## <a id='creating-instance'></a> Create a Service Instance

You can create a service instance if there is an appropriate broker present that provides the service.

To create a service instance:

1. List the available services by running:

    ```
    pdc service list
    ```

    For example:

    <%# need a realistic example without placeholder for snippet below %>
    <p class="terminal">
    $ pdc service list
    SERVICE        PLANS          BROKER             DESCRIPTION
    SERVICE-NAME   large, small   SERVICE-BROKER     Some description about the service provided.
    </p>

    * `SERVICE-NAME` is the name of the service
    * `SERVICE-BROKER` is the name of the broker which provides the service

1. Create an instance of a service by running:

    ```
    pdc instance create --name=INSTANCE-NAME --service=SERVICE-NAME --plan=SERVICE-PLAN --broker=BROKER-NAME
    ```

    Where:

    * `INSTANCE-NAME` is the name of the service instance to be created
    * `SERVICE-NAME` is the name of the service
    * `SERVICE-PLAN` is the plan that you use to configure your instance
    * `BROKER-NAME` is the name of the broker that provides the service

    <%# need a realistic example without placeholder here %>

1. (Optional) You can see the current service instances by running:

    ```
    pdc instance list
    ```

    For example:

    <p class="terminal">
    $ pdc instance list
    NAME            SERVICE        PLAN           BROKER          STATUS    CREATED AT
    INSTANCE-NAME   SERVICE-NAME   SERVICE-PLAN   BROKER-NAME     created   2019-02-31 12:00:00 +0000 GMT
    </p>

## <a id='examine-broker'></a> Examine an Instance

To examine a specific instance:

1. Run:

    ```
    pdc instance get --name=INSTANCE-NAME
    ```

    For example:

    <%# need example without placeholders %>
    <p class="terminal">
    $ pdc instance get --name=INSTANCE-NAME
    broker: BROKER-NAME
    createdAt: 2019-02-31 12:00:00 +0000 GMT
    name: INSTANCE-NAME
    plan: SERVICE-PLAN
    service: SERVICE-NAME
    status:
      message: The instance was provisioned successfully
      state: created
    </p>

## <a id='getting-access-instance'></a> Access a Service Instance

<%# needs a few sentences to describe what the user is doing here.
What does accessing an instance mean? What is the service instance binding to? %>

To access a service instance:

1. Create a binding for the instance, by running:

    ```
    pdc binding create --name=BINDING-NAME --instance=INSTANCE-NAME
    ```

    Where:

    * `BINDING-NAME` is the name you give the binding
    * `INSTANCE-NAME` is the name of the service instance you are binding

1. (Optional) You can list all bindings by running:

    ```
    pdc binding list
    ```

    For example:

    <%# need example without placeholders %>
    <p class="terminal">
    $ pdc binding list
    NAME           INSTANCE            STATUS    CREATED AT
    BINDING-NAME  INSTANCE-NAME       created   2019-02-31 12:00:00 +0000 GMT
    </p>

1. Get the credentials needed to access the service instance:

    ```
    pdc binding get --name=BINDING-NAME
    ```

    For example:

    <%# need example without placeholders %>
    <p class="terminal">
    $ pdc binding get --name=BINDING-NAME
    broker: BROKER-NAME
    createdAt: 2019-11-20 15:57:00 +0000 GMT
    credentials:
      password: PASSWORD
      username: USERNAME
    instance: INSTANCE-NAME
    name: BINDING-NAME
    plan: SERIVCE-PLAN
    service: SERVICE-NAME
    status:
      message: Injected bind result
      state: created
    </p>

    <p class="note"><strong>Note</strong>:
      The exact form of the <code>credentials</code> block varies
      from service to service depending on what is required to access the service.
    </p>

    <p class="note"><strong>Note</strong>:
      Currently binding details are stored as Kubernetes secrets so you can also
      access them through the Kubernetes API and kubectl.
    </p>
