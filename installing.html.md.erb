---
title: Installing and Configuring Pivotal Developer Console
owner: Marketplace
---

<strong><%= modified_date %></strong>

This topic describes how to install and configure <%= vars.product_full %>.

## <a id='overview'></a> Overview

<%= vars.product_short %> consists of a front end command line interface (CLI) named <%= vars.product_abbr %>
and a backing set of custom resource definitions (CRDs) and custom controllers.

## <a id='prereqs'></a> Prerequisites

* Private internal registry, such as Harbor
* Docker

## <a id='install'></a> Install and Configure <%= vars.product_short %>

To install and configure <%= vars.product_short %>:

* [Create Cloud Foundry UAA client](#create-cf-uaa-client)
* [Install Duffle](#install-duffle)
* [Relocate images](#relocate)
* [Install the CNAB](#install-cnab)
* [Install the <%= vars.product_abbr %> CLI tool](#install-cli), which is needed for operating <%= vars.product_short %>.

### <a id='create-cf-uaa-client'></a> Create Cloud Foundry UAA Client

Note: This step is only required if you wish to bind service instances to
applications running in Cloud Foundry. It must be repeated for each Cloud
Foundry you wish to make availble to <%= vars.product_short %>.

To create the required UAA Client:

<%# The following steps are generic and have been copied from https://docs.pivotal.io/pks/1-6/manage-users.html %>

1. Retrieve the UAA management admin client secret:
  a. In a web browser, navigate to the Ops Manager Installation Dashboard and click the Pivotal Application Service tile.
  b. Click the Credentials tab.
  c. Click Link to Credential next to Admin Client Credentials and copy the value of `password`

2.Target the Cloud Foundry UAA server by running the following command:

    ```
    uaac target https://UAA-ENDPOINT --ca-cert CERTIFICATE-PATH
    ```

Where:

* `UAA-ENDPOINT` is the URL of the Cloud Foundry UAA server.
* `CERTIFICATE-PATH` is the path to your Ops Manager root CA certificate.
  * If you are logged in to the Ops Manager VM, specify `/var/tempest/workspaces/default/root_ca_certificate` as the path.
  * This is the default location of the root certificate on the Ops Manager VM.
  * If you downloaded the Ops Manager root CA certificate to your machine, specify the path where you stored the certificate.

3. Authenticate with UAA by running the following command:

    ```
    uaac token client get admin -s ADMIN-CLIENT-SECRET
    ```

Where `ADMIN-CLIENT-SECRET` is your UAA management admin client secret that you
retrieved in a previous step. The client username is admin.

<%# The following steps are specific %>

4. Create an admin client for <%= vars.product_short %>

    ```
    uaac client add developerconsole -s CLIENT_SECRET --authorized_grant_types client_credentials --authorities cloud_controller.admin
    ```

Where `CLIENT_SECRET` is a password of your choosing. Keep this password safe as it will be required when installing <%= developerconsole %>.

### <a id='install-duffle'></a> Install Duffle

Duffle is a CLI that interacts with Cloud Native Application Bundles (CNABs) to package and unpackage
distributed apps for deployment on cloud platforms and services.
Duffle is used to install the <%= vars.product_short %> CNAB and relocate images.

<%# Do you ever use Duffle directly or is it just something that PDC needs and you never interact with again? %>

To install Duffle:

1. Download the most recent Duffle binary from [duffle](https://github.com/deislabs/duffle/releases) in GitHub.

1. Make the binary executable by running:

    ```
    chmod +x ~/Downloads/duffle-darwin
    ```

1. Move the binary to your path by running:

    ```
    mv ~/Downloads/duffle-darwin /usr/local/bin/duffle
    ```

1. Verify that Duffle works by running:

    ```
    duffle --help
    ```

    <p class="note">
      <strong>Note:</strong> By default, Duffle stores state on your local machine in the
      <code>$HOME/.duffle</code> directory.
      This means that any later Duffle commands, such as <code>uninstall</code> should be run from the same
      developer machine.
    </p>

### <a id='relocate'></a> Relocate Images

<%# What images does Alana relocate? From where and to where do they get relocated? Why is it necessary? %>

To relocate images:

1. Log in to your private registry by running:

    ```
    docker login harbor.example.com
    ```

1. Relocate the images by running:

    ```
    duffle relocate developer-console-VERSION.tgz \
        --bundle-is-file  \
        --relocation-mapping /tmp/mapping.json \
        --repository-prefix harbor.example.com/your-project
    ```

    Where `VERSION` is the number in the filename.

    This stores the mapping output in a file called `/tmp/mapping.json`.

1. Store `/tmp/mapping.json` somewhere safe: it is required to uninstall <%= vars.product_short %>.

### <a id='install-cnab'></a> Install the CNAB

<%# What is in the CNAB bundle and what does it do? %>

To install the CNAB:

1. Create a credentials file called `developer-console-creds.yaml` anywhere on your local machine
with the contents below.

    ```
    name: developer-console-creds
    credentials:
    - name: kubeconfig
      source:
        path: PATH-TO-KUBECONFIG # for example: /Users/pivotal/.kube/config
    - name: registry_url
      source:
        value: REGISTRY-URL # for example: https://harbor.example.com/my-project
    - name: registry_email
      source:
        value: REGISTRY-ACCOUNT-EMAIL
    - name: registry_username
      source:
        value: REGISTRY-USERNAME
    - name: registry_password
      source:
        value: REGISTRY-PASSWORD
    - name: cf_admin_client
      source:
        value: CF_ADMIN_CLIENT # for example: developerconsole
    - name: cf_admin_client_secret
      source:
        value: CF_ADMIN_CLIENT_SECRET # the secret you configured in [Create Cloud Foundry UAA client](#create-cf-uaa-client)
    ```

1. Install the bundle, referencing the mapping file created in [Relocate Images](#relocate), by running:

    ```
    duffle install developer-console developer-console-VERSION.tgz \
        --bundle-is-file \
        --credentials developer-console-creds.yaml \
        --relocation-mapping /tmp/mapping.json
    ```

    Where `VERSION` is the number in the filename.

### <a id="install-cli"></a> Install the <%= vars.product_abbr %> CLI Tool

To install the <%= vars.product_abbr %> CLI tool:

1. Log in to your Early Access user account on [Pivotal Network](https://login.run.pivotal.io/login).
If you do not have an Early Access account, please email
<a href="mailto:pdc-feedback@pivotal.io"><%= vars.product_abbr %> Feedback</a> to request one.
<%= vars.product_short %> is currently only available to Early Access users.

1. Download the <%= vars.product_short %> tarball files from [Pivotal Network](https://network.pivotal.io/products/pivotal-developer-console/) to your working directory.

1. Untar the `pdc` tarball and choose the appropriate binary CLI tool for your operating system.

1. Make the chosen <%= vars.product_abbr %> CLI tool executable by running:

    ```
    chmod +x pdc
    ```

1. Move this <%= vars.product_abbr %> CLI tool to somewhere within your system path such as `/usr/local/bin/pdc`.

## <a id="feedback"></a> Feedback

<%= partial vars.path_to_partials + '/developer-console/alpha-feedback' %>
