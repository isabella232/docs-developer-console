---
title: Installing and Configuring Developer Console
owner: Marketplace
---

<strong><%= modified_date %></strong>

This topic describes how to install and configure <%= vars.product_full %>.

## <a id='overview'></a> Overview

<%= vars.product_short %> consists of a front end command line interface (CLI) named
<%= vars.product_short %> CLI and a backing set of custom resource definitions (CRDs) and custom
controllers.

## <a id='prereqs'></a> Prerequisites

* Private internal registry, such as Harbor
* Docker

## <a id='install'></a> Install and Configure <%= vars.product_short %>

To install and configure <%= vars.product_short %>:

* [Install Duffle](#install-duffle)
* [Relocate the Images](#relocate)
* [Install the CNAB](#install-cnab)
* [Install the <%= vars.product_short %> CLI Tool](#install-cli), which is needed for operating
<%= vars.product_short %>.

### <a id='install-duffle'></a> Install Duffle

Duffle is a CLI that interacts with Cloud Native Application Bundles (CNABs) to package and unpackage
distributed apps for deployment on cloud platforms and services.
Duffle is used to install the <%= vars.product_short %> CNAB and relocate images.

<%# Do you ever use Duffle directly or is it just something that Dev Console needs and you never interact with again? %>

To install Duffle:

1. Download the most recent Duffle binary from [duffle](https://github.com/deislabs/duffle/releases)
in GitHub.

1. Make the binary executable by running:

    ```
    chmod +x ~/Downloads/duffle-darwin
    ```

1. Move the binary to your path by running:

    ```
    mv ~/Downloads/duffle-darwin /usr/local/bin/duffle
    ```

1. Verify that Duffle works by running:

    ```
    duffle --help
    ```

    <p class="note">
      <strong>Note:</strong> By default, Duffle stores state on your local machine in the
      <code>$HOME/.duffle</code> directory.
      This means that any later Duffle commands, such as <code>uninstall</code> should be run from
      the same developer machine.
    </p>

### <a id='relocate'></a> Relocate the Images

<%# What images does Alana relocate? From where and to where do they get relocated? Why is it necessary? %>

To relocate the images:

1. Log in to your private registry by running:

    ```
    docker login harbor.example.com
    ```

1. Relocate the images by running:

    ```
    duffle relocate developer-console-VERSION.tgz \
        --bundle-is-file  \
        --relocation-mapping /tmp/mapping.json \
        --repository-prefix harbor.example.com/your-project
    ```

    Where `VERSION` is the number in the filename.

    This stores the mapping output in a file called `/tmp/mapping.json`.

1. Store `/tmp/mapping.json` somewhere safe: it is required to uninstall <%= vars.product_short %>.

### <a id='install-cnab'></a> Install the CNAB

<%# What is in the CNAB bundle and what does it do? %>

To install the CNAB:

1. Create a credentials file called `developer-console-creds.yaml` anywhere on your local machine
with the contents below.

    ```
    name: developer-console-creds
    credentials:
    - name: kubeconfig
      source:
        path: PATH-TO-KUBECONFIG # For example: /Users/pivotal/.kube/config
    - name: registry_url
      source:
        value: REGISTRY-URL # For example: https://harbor.example.com/my-project
    - name: registry_email
      source:
        value: REGISTRY-ACCOUNT-EMAIL
    - name: registry_username
      source:
        value: REGISTRY-USERNAME
    - name: registry_password
      source:
        value: REGISTRY-PASSWORD
    ```

1. Install the bundle, referencing the mapping file created in [Relocate the Images](#relocate), by
running:

    ```
    duffle install developer-console developer-console-VERSION.tgz \
        --bundle-is-file \
        --credentials developer-console-creds.yaml \
        --relocation-mapping /tmp/mapping.json
    ```

    Where `VERSION` is the number in the filename.

### <a id="install-cli"></a> Install the <%= vars.product_short %> CLI Tool

To install the <%= vars.product_short %> CLI tool:

1. Log in to your Early Access user account on [<%= vars.product_network %>](https://login.run.pivotal.io/login).
If you do not have an Early Access account, please email
<a href="mailto:pdc-feedback@pivotal.io"><%= vars.product_short %> Feedback</a> to request one.
<%= vars.product_short %> is currently only available to Early Access users.

1. Download the <%= vars.product_short %> tarball files to your working directory from
[<%= vars.product_network %>](https://network.pivotal.io/).

<%# Ask the engineers if the journey I just took through login.run.pivotal.io/login is what a customer sees who is not an early adopter.
Regular customers (non-early adopters) need to find it obvious that they aren't early adopters and cannot access the tarball files. %>

<%# Get a direct link to the tarball files at some point. It will only work for early adopters, though, for the foreseeable future. %>

1. Untar the `pdc` tarball and choose the appropriate binary CLI tool for your operating system.

1. Make the chosen <%= vars.product_short %> CLI tool executable by running:

    ```
    chmod +x pdc
    ```

1. Move this <%= vars.product_short %> CLI tool to somewhere within your system path such as
`/usr/local/bin/pdc`.

## <a id="feedback"></a> Feedback

<%= partial vars.path_to_partials + '/developer-console/alpha-feedback' %>
